name: CMake

on:
  workflow_call:

jobs:
  build:
    strategy:
      matrix:
        config:
        - name: Linux SDL1
          os: ubuntu-latest
          dependencies: libsdl1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev gettext
          options: -DUSE_SDL_VERSION=SDL
        - name: Linux SDL2
          os: ubuntu-latest
          dependencies: libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev gettext
          options: -DUSE_SDL_VERSION=SDL2
        - name: macOS SDL1
          os: macos-latest
          dependencies: sdl sdl_mixer sdl_image
          options: -DUSE_SDL_VERSION=SDL
        - name: macOS SDL1 App Bundle
          os: macos-latest
          dependencies: sdl sdl_mixer sdl_image dylibbundler
          options: -DUSE_SDL_VERSION=SDL -DMACOS_APP_BUNDLE=ON
        - name: macOS SDL2
          os: macos-latest
          dependencies: sdl2 sdl2_mixer sdl2_image
          options: -DUSE_SDL_VERSION=SDL2
        - name: macOS SDL2 App Bundle
          os: macos-latest
          dependencies: sdl2 sdl2_mixer sdl2_image dylibbundler
          options: -DUSE_SDL_VERSION=SDL2 -DMACOS_APP_BUNDLE=ON
        - name: Windows SDL2
          os: windows-latest
          dependencies: sdl2 sdl2-mixer sdl2-image zlib
          options: -DUSE_SDL_VERSION=SDL2 -DCMAKE_TOOLCHAIN_FILE="C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows
    name: CMake (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (Linux)
      if: ${{ matrix.config.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get -y update
        sudo apt-get -y install ${{ matrix.config.dependencies }}
    - name: Install dependencies (macOS)
      if: ${{ matrix.config.os == 'macos-latest' }}
      run: |
        brew update
        brew install ${{ matrix.config.dependencies }}
    - name: Install dependencies (Windows)
      if: ${{ matrix.config.os == 'windows-latest' }}
      run: |
        C:/vcpkg/vcpkg --triplet x64-windows install ${{ matrix.config.dependencies }}
    - name: Build
      run: |
        cmake -B build -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Debug -DENABLE_STRICT_COMPILATION=ON -DENABLE_IMAGE=ON -DENABLE_TOOLS=ON ${{ matrix.config.options }}
        cmake --build build -j2
    - name: Install
      if: ${{ !contains(matrix.config.name, 'Bundle') }}
      run: |
        cmake --install build --config Debug --prefix "./${{ matrix.config.name }}"
    - uses: actions/upload-artifact@v3
      if: ${{ !contains(matrix.config.name, 'Bundle') }}
      with:
        name: cmake-artifacts-test-${{ matrix.config.os }}
        path: ./${{ matrix.config.name }}
    - uses: actions/upload-artifact@v3
      if: contains(matrix.config.name, 'Bundle')
      with:
        name: cmake-artifacts-test-${{ matrix.config.os }}-bundle
        path: ./build/fheroes2.app/
