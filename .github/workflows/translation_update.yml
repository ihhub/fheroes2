name: Translation update

on:
  workflow_call:

jobs:
  translation:
    name: Translation update
    if: ${{ github.repository == 'ihhub/fheroes2' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get -y update
        sudo apt-get -y install gettext
    - name: Setup Git
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "action@github.com"
    - name: Create PR branch
      run: |
        PR_BRANCH="translation-update-$(uuidgen)"
        git switch -c "$PR_BRANCH"
        echo "PR_BRANCH=$PR_BRANCH" >> "$GITHUB_ENV"
    - name: Generate POT
      run: |
        make -C src/dist -j 2 pot
    - name: Merge PO with POT
      run: |
        make -C files/lang -j 2 merge
    - name: Generate statistics
      run: |
        mkdir -p docs/json
        for PO_FILE in files/lang/*.po; do
            STATISTICS="$(msgfmt --statistics --output-file=/dev/null -- "$PO_FILE" 2>&1)"
            echo "$PO_FILE: $STATISTICS"
            if [[ "$STATISTICS" =~ ([0-9]+)\ translated\ messages? ]]; then
                TRANSLATED="${BASH_REMATCH[1]}"
            else
                TRANSLATED=0
            fi
            if [[ "$STATISTICS" =~ ([0-9]+)\ fuzzy\ translations? ]]; then
                FUZZY="${BASH_REMATCH[1]}"
            else
                FUZZY=0
            fi
            if [[ "$STATISTICS" =~ ([0-9]+)\ untranslated\ messages? ]]; then
                UNTRANSLATED="${BASH_REMATCH[1]}"
            else
                UNTRANSLATED=0
            fi
            OVERALL=$((TRANSLATED + FUZZY + UNTRANSLATED))
            if ((OVERALL == 0)); then
                PERCENT=0
            else
                PERCENT=$((TRANSLATED * 100 / OVERALL))
            fi
            LANGUAGE="$(basename "${PO_FILE%.po}")"
            if [[ "$(head -n1 -- "$PO_FILE")" =~ ^\#\ (.+)\ translation ]]; then
                LABEL="${BASH_REMATCH[1]}"
            else
                LABEL="$LANGUAGE"
            fi
            if ((PERCENT < 75)); then
                COLOR="red"
            elif ((PERCENT < 95)); then
                COLOR="yellow"
            else
                COLOR="green"
            fi
            jq -n -c --arg lbl "$LABEL" --arg msg "$PERCENT%" --arg clr "$COLOR" "{ schemaVersion: 1, label: \$lbl, message: \$msg, color: \$clr }" > "docs/json/lang_$LANGUAGE.json"
        done
    - name: Commit changes
      run: |
        git diff --name-only -z -- files/lang/*.po \
        | xargs -r0 bash -c 'set -e; for NAME in "$@"; do if [[ -n "$(git diff "-I^\"POT-Creation-Date:[^\"]*\"$" -- "$NAME")" ]]; then git add -- "$NAME"; fi; done' dummy
        git add -- docs/json/lang_*.json
        if git commit -m "Update translation files"; then git push origin HEAD; echo "CREATE_PR=YES" >> "$GITHUB_ENV"; fi
    - name: Create PR
      if: ${{ env.CREATE_PR == 'YES' }}
      uses: actions/github-script@v6
      with:
        script: |
          let pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Update translation files",
              head: "${{ env.PR_BRANCH }}",
              base: "${{ github.ref }}",
          });
          let assigneesPromise = github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              assignees: ["${{ github.actor }}"],
          });
          let labelsPromise = github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ["improvement", "translation"],
          });
          await Promise.all([assigneesPromise, labelsPromise]);
