sudo: required

language: cpp

# blocklist
branches:
  except:
  - /^fheroes2-windows-.*$/
  - /^fheroes2-linux-.*$/
  - /^fheroes2-osx-.*$/

addons:
  sonarcloud:
    organization: "ihhub"
    token:
      secure: "C0871bIJWfjPBEwoKUUOly388BmG1ugYY9xFCRTSUIrc56ANGxvETUunzdcgNKGaX7lcgpDlpwNcR4SlCtxGEB8T3017Xo59LpDsnOCpgF4DVhYbFv8qhqWDvu+bKHwOV521rSpveh3d49q9Yt7EiHeLoC1T1wgBtanQ78dMJPvVvkUg1+fCagL9aXAb3bx/PHKGzkJ+qSYgGUkhGFZb/a/FhWDJNUcV3LgDGSFBiZax+jukATeLTovbUktD1kpCyXhQcsC+aVGjbNIacL3ckiD/VE4LD7zGgPM4tPpPcuRpe7sYv41l9d60apWdnhkD4QcqCRBG3nEAHs3+ZBhfCb8W0eb12EnzLh41oIwKDegxkC9+0qFWaQLnMn3P9upa6s3cPFHVFwMCL5yoWh0LYJTQRS0MpSdxJpX/XBK02NKoTyUm3tAlD/axKN2EXCrztBQ+2ZawOoK48AI2MFNOrDOgLpd3+ilzaYM5jKGFJ2ktLcRLYjF79wmn+qH644AQIAdaHXnkNfHPY7wiNrQWVdDKl3Xd1JxmOH5xSw/n+DY/Fr7YGwDseEwtSQEfRNC45X1BAxOvIiM7kBx4n+PAXiAApx+PjCz9Ojpk8CF7rnW96f5IOjJDwSpc3Rza02f+zjFhOpSZ0I5lM3sJ6oYhIK6Uscgb74v2RNWKmAnd/wI=" # encrypted value of your token

matrix:
  include:
    - os: linux
      name: "Linux (Ubuntu) with SDL 1.2"
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libsdl1.2-dev
        - sudo apt-get install -y libsdl-ttf2.0-dev
        - sudo apt-get install -y libsdl-mixer1.2-dev
        - sudo apt-get install -y libsdl-image1.2-dev
      before_deploy:
        - zip fheroes2_linux_sdl1.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/linux/install_sdl_1.sh script/demo/demo_linux.sh
        - export TRAVIS_TAG=fheroes2-linux-sdl1_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_linux_sdl1.zip"
        skip_cleanup: true
        name: Linux (Ubuntu) build with SDL 1 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: linux
      name: "Linux (Ubuntu) with SDL 2.0"
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libsdl2-dev
        - sudo apt-get install -y libsdl2-ttf-dev
        - sudo apt-get install -y libsdl2-mixer-dev
        - sudo apt-get install -y libsdl2-image-dev
        - export WITH_SDL2="ON"
      before_deploy:
        - zip fheroes2_linux_sdl2.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/linux/install_sdl_2.sh script/demo/demo_linux.sh
        - export TRAVIS_TAG=fheroes2-linux-sdl2_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_linux_sdl2.zip"
        skip_cleanup: true
        name: Linux (Ubuntu) build with SDL 2 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: linux
      arch: arm64
      name: "Linux (Ubuntu) ARM with SDL 1.2"
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libsdl1.2-dev
        - sudo apt-get install -y libsdl-ttf2.0-dev
        - sudo apt-get install -y libsdl-mixer1.2-dev
        - sudo apt-get install -y libsdl-image1.2-dev
        - sudo apt-get install -y gettext
        - sudo apt-get install -y zip
      before_deploy:
        - zip fheroes2_linux_arm_sdl1.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/linux/install_sdl_1.sh script/demo/demo_linux.sh
        - export TRAVIS_TAG=fheroes2-linux-arm-sdl1_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_linux_arm_sdl1.zip"
        skip_cleanup: true
        name: Linux (Ubuntu) ARM build with SDL 1 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: linux
      arch: arm64
      name: "Linux (Ubuntu) ARM with SDL 2.0"
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libsdl2-dev
        - sudo apt-get install -y libsdl2-ttf-dev
        - sudo apt-get install -y libsdl2-mixer-dev
        - sudo apt-get install -y libsdl2-image-dev
        - sudo apt-get install -y gettext
        - sudo apt-get install -y zip
        - export WITH_SDL2="ON"
      before_deploy:
        - zip fheroes2_linux_arm_sdl2.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/linux/install_sdl_2.sh script/demo/demo_linux.sh
        - export TRAVIS_TAG=fheroes2-linux-arm-sdl2_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_linux_arm_sdl2.zip"
        skip_cleanup: true
        name: Linux (Ubuntu) ARM build with SDL 2 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: osx
      name: "OSX with SDL 1.2"
      before_install:
        - export HOMEBREW_NO_INSTALL_CLEANUP=1
        - brew update
        - brew install sdl
        - brew install sdl_ttf
        - brew install sdl_mixer
        - brew install sdl_image
        - export PATH="/usr/local/opt/gettext/bin:$PATH"
      before_deploy:
        - zip fheroes2_osx_sdl1.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/macos/install_sdl_1.sh script/demo/demo_macos.sh
        - export TRAVIS_TAG=fheroes2-osx-sdl1_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_osx_sdl1.zip"
        skip_cleanup: true
        name: MacOS build with SDL 1 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: osx
      name: "OSX with SDL 2.0"
      before_install:
        - export HOMEBREW_NO_INSTALL_CLEANUP=1
        - brew update
        - brew install sdl2
        - brew install sdl2_ttf
        - brew install sdl2_mixer
        - brew install sdl2_image
        - export PATH="/usr/local/opt/gettext/bin:$PATH"
        - export WITH_SDL2="ON"
      before_deploy:
        - zip fheroes2_osx_sdl2.zip fheroes2 LICENSE fheroes2.cfg fheroes2.key script/macos/install_sdl_2.sh script/demo/demo_macos.sh
        - export TRAVIS_TAG=fheroes2-osx-sdl2_dev
        - git tag -f $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "fheroes2_osx_sdl2.zip"
        skip_cleanup: true
        name: MacOS build with SDL 2 support (latest commit)
        body: Compiled version of $TRAVIS_COMMIT commit
        prerelease: true
        overwrite: true
        on:
          branch: master
    - os: osx
      name: "Editor on OSX"
      before_install:
        - brew link --force qt5;
        - export CMAKE_PREFIX_PATH=$(brew --prefix qt5)/lib/cmake;
      script:
        - cd editor
        - mkdir -p build
        - cd build
        - cmake ..
        - make
    - os: linux
      name: "Static analysis"
      script:
        - export EXCLUDE_PATTERN_1=" not found in expected header ";
        - export EXCLUDE_PATTERN_2=" not found in any directly \#included header";
        - export EXCLUDE_PATTERN_3=" unable to find ";
        - git clone https://github.com/myint/cppclean;
        - ./cppclean/cppclean src | grep -v "$EXCLUDE_PATTERN_1" | grep -v "$EXCLUDE_PATTERN_2" | grep -v "$EXCLUDE_PATTERN_3";
    - os: linux
      name: "SonarCloud"
      dist: trusty
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libsdl1.2-dev
        - sudo apt-get install -y libsdl-ttf2.0-dev
        - sudo apt-get install -y libsdl-mixer1.2-dev
        - sudo apt-get install -y libsdl-image1.2-dev
        - sudo apt-get install -y gettext
        - sudo apt-get install -y zip
      script:
        # Wraps the compilation with the Build Wrapper to generate configuration (used
        # later by the SonarScanner) into the "bw-output" folder
        - build-wrapper-linux-x86-64 --out-dir bw-output make
        # And finally run the SonarCloud analysis - read the "sonar-project.properties"
        # file to see the specific configuration
        - sonar-scanner -Dsonar.cfamily.build-wrapper-output=bw-output

script:
  - |
    make -j 2
